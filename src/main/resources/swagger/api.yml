# API-first development with OpenAPI
# This file will be used at compile time to generate Spring-MVC endpoint stubs using openapi-generator
openapi: '3.0.1'
info:
  title: Paradine
  version: 2.0.0
  termsOfService: https://localhost:8080/en/tos
  contact:
    name: API Support
    url: https://localhost:8080/en/support
    email: support@example.com
#  license:
#    name: Apache 2.0
#    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:8080/api/paradine/v2
    description: Development server
  - url: https://localhost:8080/api/paradine/v2
    description: Development server with TLS Profile
paths:
  /restaurants:
    get:
      security: [] # No security
      parameters:
        - in: query
          name: page
          description: Page number, zero if not sent
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: q
          description: Search term
          required: false
          schema:
            type: string
            minLength: 3
            maxLength: 42
        - in: query
          name: lat
          description: Latitude for geolocation search. Must be used in conbination with 'lng'
          required: false
          schema:
            type: number
            format: float
            minimum: -90.0
            maximum: 90.0
        - in: query
          name: lng
          description: Longitude for geolocation search. Must be used in conbination with 'lat'
          required: false
          schema:
            type: number
            format: float
            minimum: -180.0
            maximum: 180.0
      operationId: getRestaurants
      description: Returns a page of restaurants enriched with hourly safety indicators.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestaurantsGetResponse'
          description: >-
          # A page of restaurants.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Problem'
          description: >-
          # Error response indicating incorrect / inconsistent query parameters.
components:
  schemas:
    Envelope:
      type: object
      description: Properties of this object represent response metadata
      required:
        - version
      properties:
        version:
          description: API version
          type: string
    RestaurantsGetResponse:
      allOf:
        - $ref: '#/components/schemas/Envelope'
        - type: object
          properties:
            restaurants:
              type: array
              items:
                $ref: '#/components/schemas/Restaurant'
      example:
        version: '2.0'
        restaurants:
          - id: aaaa-bbbb-cccc-dddd
            name: Shoti
            address:
              ru_RU: ул. Шевченко 20
              uk_UA: вул. Шевченка 20
              en_US: 20 Schevchenka str
            image: http://paradine.com/static/assets/5783853745/34587345934583.jpg
            geolat: 50.304567
            geolng: 30.344532
            safetyToday:
              - h: 0
                value: -1
              - h: 1
                value: -1
              - h: 2
                value: -1
              - h: 3
                value: -1
              - h: 4
                value: -1
              - h: 5
                value: -1
              - h: 6
                value: -1
              - h: 7
                value: -1
              - h: 8
                value: -1
              - h: 9
                value: 0
              - h: 10
                value: 0
              - h: 11
                value: 0
              - h: 12
                value: 10
              - h: 13
                value: 10
              - h: 14
                value: 10
              - h: 15
                value: 10
              - h: 16
                value: 10
              - h: 17
                value: 10
              - h: 18
                value: 20
              - h: 19
                value: 20
              - h: 20
                value: 20
              - h: 21
                value: 20
              - h: 22
                value: 10
              - h: 23
                value: -1
            safetyTomorrow:
              - h: 0
                value: -1
              - h: 1
                value: -1
              - h: 2
                value: -1
              - h: 3
                value: -1
              - h: 4
                value: -1
              - h: 5
                value: -1
              - h: 6
                value: -1
              - h: 7
                value: -1
              - h: 8
                value: -1
              - h: 9
                value: 0
              - h: 10
                value: 0
              - h: 11
                value: 0
              - h: 12
                value: 10
              - h: 13
                value: 10
              - h: 14
                value: 10
              - h: 15
                value: 10
              - h: 16
                value: 10
              - h: 17
                value: 10
              - h: 18
                value: 20
              - h: 19
                value: 20
              - h: 20
                value: 20
              - h: 21
                value: 20
              - h: 22
                value: 10
              - h: 23
                value: -1
    Restaurant:
      type: object
      required:
        - id
        - name
        - image
        - address
        - safetyToday
        - safetyTomorrow
      properties:
        id:
          type: string
        name:
          type: string
        image:
          type: string
        address:
          type: object
          additionalProperties:
            type: string
          example:
            ru_RU: 'ул. Шевченко 20'
            uk_UA: 'вул. Шевченка 20'
        geolat:
          type: number
          format: float
        geolng:
          type: number
          format: float
        safetyToday:
          type: array
          items:
            $ref: '#/components/schemas/HourlySafety'
        safetyTomorrow:
          type: array
          items:
            $ref: '#/components/schemas/HourlySafety'
    HourlySafety:
      type: object
      description: Representation of a restaurants' safety at a certain hour
      required:
        - h
        - value
      properties:
        h:
          description: hour, from 0 to 23
          type: integer
        value:
          description: safety indicator
          type: integer
      example:
        h: 17
        value: 10

  responses:
    Problem:
      description: error occurred - see status code and problem object for more information.
      content:
        'application/problem+json':
          schema:
            $ref: 'https://opensource.zalando.com/problem/schema.yaml#/Problem'

  securitySchemes:
    jwt:
      type: http
      description: JWT Authentication
      scheme: bearer
      bearerFormat: JWT
    basic:
      type: http
      description: Basic Authentication
      scheme: basic
security:
  - jwt: []
  - basic: []
